import os
import matplotlib.pyplot as plt

if __name__ == "__main__":
    separators = [0, 60, 90, 150]
    name_separators = ["small (n < 50) ", "medium (50 <= n < 100) ", "large ( n >= 100) " ]
    name_separators2 = ["small", "medium", "large"]
    for dataset in ["standard"]:
        print("Dataset: " + dataset)
        init_path = "results/results_" + dataset + "/"
        times_irp = []
        file = open(init_path + "irp_results.txt", "r")
        irp_results = []
        for result in file.readlines():
            irp_results.append(float(result.split(" ")[0]))
            times_irp.append(float(result.split(" ")[1]))

        allCostsTotal = []
        labels = ["HGS-DSIRPR", "HGS-DSIRP", "Coelho", "HGS-IRP"]
        for l, chemin_dossier in enumerate([init_path + "dsirpr_results/DSIRPsol-end-dirp-", init_path + "dsirp_results/DSIRPsol-dirp-"]):
            print(labels[l] + " ")
            all_costs = []
            times = []
            listInstance = []
            for nbClients in [5,10,15,25,50,75,100,125,150,200]:
                for p in [5,10,20]:
                    for i in [1,2,3,4,5]:
                        listInstance.append(chemin_dossier + str(nbClients) + "-" + str(p) + "-" + str(i) + "_seed-42_veh-1_scenarios-10")
            
            for path in listInstance:
                file = open(path, "r")
                temp = file.readlines()
                time = 0
                for line in temp:
                    idx = line.find("Best Solution Time")
                    if (idx != -1):
                        time += float(line.split("Best Solution Time")[1][2:])
                times.append(time)
                all_costs.append(float(temp[-6:-5][0].split(" ")[2]))
            total = 0
            length_total = 0
            for i in range(len(separators) - 1):
                gap = 0
                for j in range (separators[i], separators[i+1]):
                    gap += (all_costs[j]-irp_results[j]) / all_costs[j]
                total += gap
                length = separators[i+1] - separators[i]
                length_total += length
                gap /= length
                print(name_separators[i] + str(sum(all_costs[separators[i]:separators[i+1]])/length) + " " + str(sum(times[separators[i]:separators[i+1]])/length) + " " + str(gap * 100))

            print("Average " + str(sum(all_costs)/length_total) + " " + str(sum(times)/length_total) + " " + str((total/length_total) * 100))
            allCostsTotal.append(all_costs)
            print("")

        coelho_results = []
        file = open(init_path + "coelho_results.txt", "r")
        for result in file.readlines():
            coelho_results.append(float(result))

        print("Coelho:")
        total = 0
        length_total = 0
        for i in range(len(separators) - 1):
            gap = 0
            for j in range (separators[i], separators[i+1]):
                gap += (coelho_results[j]-irp_results[j]) / coelho_results[j]
            total += gap
            length = separators[i+1] - separators[i]
            length_total += length
            gap /= length
            print(name_separators[i] + str(sum(coelho_results[separators[i]:separators[i+1]])/length) + " " + str(gap * 100))
        print("Average " + str(sum(coelho_results)/length_total) + " " + str((total / length_total) * 100) + "\n")

        print("IRP:")
        total = 0
        length_total = 0
        for i in range(len(separators) - 1):
            length = separators[i+1] - separators[i]
            length_total += length
            print(name_separators[i] + str(sum(irp_results[separators[i]:separators[i+1]])/length) + " " + str(sum(times_irp[separators[i]:separators[i+1]])/length))
        print("Average " + str(sum(irp_results)/length_total) + " " + str(sum(times)/length_total) + " " + str((total/length_total) * 100))

        allCostsTotal.append(coelho_results)
        allCostsTotal.append(irp_results)
        for i in range (len(separators) - 1):
            for j, costs in enumerate(allCostsTotal):
                plt.scatter(costs[separators[i]:separators[i+1]],[i for i in range (separators[i] + 1, separators[i+1] + 1)], s=10,label=labels[j])
            for k in range(separators[i],separators[i+1]):
                plt.plot([min(irp_results[k], coelho_results[k]),max(coelho_results[k], allCostsTotal[0][k], allCostsTotal[1][k])], [k+1,k+1], color = "black", linewidth=0.5)
                
            plt.xlabel("Cost")
            plt.ylabel("Index number")
            plt.legend()
            plt.savefig("./results/Figures/" + dataset + "/" + name_separators2[i] +".pdf", bbox_inches = 'tight')
            plt.clf()